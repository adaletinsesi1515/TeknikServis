<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        EBERAREQERED/9k=
</value>
  </data>
</root>